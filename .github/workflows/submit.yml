name: publish
on:
  workflow_dispatch:
    inputs:
      VERSION:
        type: string
        description: "Lantern Suite version to tag"
        required: true
        default: "3"
      IMAGE_NAME:
        type: string
        description: "Container image name to tag"
        required: true
        default: "lanterndata/lantern-suite"
      LANTERN_VERSION:
        type: string
        description: "Lantern version to build"
        required: true
        default: "0.1.1"
      LANTERN_EXTRAS_VERSION:
        type: string
        description: "Lantern Extras version to build"
        required: true
        default: "0.1.1"
jobs:
  docker:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - postgres: 16
          - postgres: 15
          - postgres: 14
          - postgres: 13
          - postgres: 12
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            PG_VERSION=${{ matrix.postgres }}
            LANTERN_VERSION=${{ github.event.inputs.LANTERN_VERSION }}
            LANTERN_EXTRAS_VERSION=${{ github.event.inputs.LANTERN_EXTRAS_VERSION }}
          # the :latest tag will refer to pg15 version
          # but we will also include :latest-pg$v tag
          tags: |
            ${{ (matrix.postgres == 15 && format('{0}:latest', github.event.inputs.IMAGE_NAME) || '') }}
            ${{ github.event.inputs.IMAGE_NAME }}:latest-pg${{ matrix.postgres }}
            ${{ github.event.inputs.IMAGE_NAME }}:${{ github.event.inputs.VERSION }}-pg${{ matrix.postgres }}

  create-release:
    needs: docker
    runs-on: ubuntu-22.04
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.VERSION }}
          name: ${{ github.event.inputs.VERSION }}
          body: |
            Lantern Suite version ${{ github.event.inputs.VERSION }}
            - Lantern ${{ github.event.inputs.LANTERN_VERSION }}
            - Lantern Extras ${{ github.event.inputs.LANTERN_EXTRAS_VERSION }}
            - Postgres versions: 12, 13, 14, 15, 16
          draft: false
          prerelease: false